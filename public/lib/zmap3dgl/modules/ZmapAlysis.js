import draw from"./ZmapDrawing.js";import Calc from"./ZmapCompute.js";import WaterVision from"./WaterVision.js";const TO_DEGREES=180/Math.PI;export default class{constructor(e){this.viewer=e,this.czviewer=e._czdata.viewer,this.draw=new draw(e),this.calc=new Calc(e)}startMeasureDistance(e={}){const{viewer:i,czviewer:t,draw:r}=this,{leftClick:o,rightClick:a,mouseMove:n,drawFontHeight:s,drawLineHeight:l}=e;let c,C=null;const m=[];r.startdrawLine({...e,leftClick:e=>{if(e.length>1){let i=e[e.length-2],r=e[e.length-1];addLabel(i,r,m,t,s)}"function"==typeof o&&o(e)},rightClick:()=>{m.forEach(e=>{t.entities.remove(e)}),t.entities.remove(c),"function"==typeof a&&a()},mouseMove:(e,i)=>{C=e,c||(c=addMoveLabel(t,()=>{if(null==C)return;const e=C,t=i[i.length-1],r=new Cesium.Cartesian3((e.x+t.x)/2,(e.y+t.y)/2,(e.z+t.z)/2+s),o=new Number(Cesium.Cartesian3.distance(e,t));return c&&o>1&&(c.label.text=o.toFixed(2)+"米"),c&&o<=1&&(c.label.text=""),r})),"function"==typeof n&&n(e,i)}})}startMeasureArea(e={}){const{viewer:i,czviewer:t,draw:r}=this,{leftDbClick:o,drawheight:a}=e;r.startDrawPolygon({...e,leftDbClick:(e,t)=>{"function"==typeof o&&o(e,t);i.scene.calcArea(e)}})}drawVisionLine(e={}){const{viewer:i,czviewer:t,draw:r,calc:o,drawLineacrossTerrain:a}=this,{rightClick:n,mouseMove:s,drawheight:l}=e,c=this;let C=t.scene.primitives.add(new Cesium.PolylineCollection);r.startdrawLine({...e,polylineOptions:{material:new Cesium.Color(0,0,0,0)},mouseMove:(e,i)=>{const t=i[i.length-1];e&&t&&(C.removeAll(),a.call(c,t,e,C)),"function"==typeof s&&s(e,i)},rightClick:()=>{t.scene.primitives.remove(C),"function"==typeof n&&n()}})}drawVisualAanalysis(e={}){const{viewer:i,czviewer:t,draw:r,calc:o,drawLineacrossTerrain:a}=this,{leftDbClick:n,rightClick:s,worker:l,drawheight:c}=e,C=l||"./modules/worker/TerrainCompute.js",m=t.entities.add({polygon:{material:new Cesium.Color(174/255,238/255,238/255,.7)}});r.startdrawCircle({...e,leftDbClick:(e,i)=>{const t=o.getCircleLinepoints(Cesium.Cartographic.fromCartesian(e),i),r=new Worker(C),a=t;a.forEach((e,i)=>{const t=Cesium.Cartographic.fromCartesian(e);a[i]={x:t.longitude*TO_DEGREES,y:t.latitude*TO_DEGREES,z:t.height*TO_DEGREES}});const s=Cesium.Cartographic.fromCartesian(e);r.postMessage({type:"viewCompute",positions:a,center:{x:s.longitude*TO_DEGREES,y:s.latitude*TO_DEGREES,z:s.height},interpolationDensity:1e3}),r.onmessage=e=>{const i=e.data;i.forEach((e,t)=>{i[t]=Cesium.Cartesian3.fromDegrees(e.x,e.y,e.z)}),m.polygon.hierarchy=i,r.terminate()},"function"==typeof n&&n(e,i)},rightClick:()=>{t.entities.remove(m),"function"==typeof s&&s()}})}drawDominantPoint(e={}){const{viewer:i,czviewer:t,draw:r,calc:o,drawLineacrossTerrain:a}=this,{leftDbClick:n,rightClick:s,worker:l,drawheight:c}=e,C=l||"./modules/worker/TerrainCompute.js",m=t.scene.primitives.add(new Cesium.PolylineCollection),d=t.scene.primitives.add(new Cesium.BillboardCollection),u=[];r.startdrawCircle({...e,followSurface:!0,leftDbClick:(e,i)=>{const t=o.getCircleLinepoints(Cesium.Cartographic.fromCartesian(e),i),r=new Worker(C),a=t;a.forEach((e,i)=>{const t=Cesium.Cartographic.fromCartesian(e);a[i]={x:t.longitude*TO_DEGREES,y:t.latitude*TO_DEGREES,z:t.height*TO_DEGREES}}),r.postMessage({type:"dominantCompute",positions:a,interpolationDensity:1e3}),r.onmessage=e=>{let i=e.data;i=Cesium.Cartesian3.fromDegrees(i.x,i.y,i.z),r.terminate(),d.add({position:i,image:"./images/redflag.png",height:40,width:30,pixelOffset:new Cesium.Cartesian2(0,-20)})},"function"==typeof n&&n(e,i)},rightClick:()=>{"function"==typeof s&&s(),t.scene.primitives.remove(m),t.scene.primitives.remove(d),u.forEach(e=>{t.entities.remove(e)})}})}drawLineacrossTerrain(e,i,t){const{viewer:r,czviewer:o,draw:a,calc:n}=this;e=Cesium.Cartographic.fromCartesian(e),i=Cesium.Cartographic.fromCartesian(i);n.pots2tv;var s=n.calcLines(e,i);s.push(i);for(var l=0;l<s.length&&!(l+1>=s.length);l+=2)t.add({positions:[Cesium.Cartesian3.fromRadians(s[l].longitude,s[l].latitude,s[l].height),Cesium.Cartesian3.fromRadians(s[l+1].longitude,s[l+1].latitude,s[l+1].height)],width:1,followSurface:!1,show:!0,material:l>0?Cesium.Material.fromType("Color",{color:Cesium.Color.RED}):Cesium.Material.fromType("Color",{color:Cesium.Color.GREEN})});return s}startSubmergedAnalysis(e={}){const{viewer:i,czviewer:t,draw:r}=this,{leftDbClick:o,rightClick:a,drawheight:n}=e;let s;r.startDrawPolygon({...e,leftDbClick:(e,t)=>{for(let i=0;i<e.length;i++){const t=Cesium.Cartographic.fromCartesian(e[i]);e[i]=new Cegore.Position(t)}const r=document.createElement("CANVAS");r.width=400,r.height=300,s=new WaterVision({viewer:i,canvas:r,points:e,height:e[0].z,extrudedHeight:e[0].z}),"function"==typeof o&&o(e,t)},rightClick:()=>{s&&s.remove(),"function"==typeof a&&a()}})}}const addLabel=function(e,i,t,r,o){let a=new Cesium.Cartesian3((e.x+i.x)/2,(e.y+i.y)/2,(e.z+i.z)/2+o),n=new Number(Cesium.Cartesian3.distance(e,i));n<1||t.push(r.entities.add({position:a,label:{fillColor:new Cesium.Color(188/255,238/255,104/255),text:n.toFixed(2)+"米",font:"1.5vw arial"}}))},addMoveLabel=function(e,i){return e.entities.add({position:new Cesium.CallbackProperty(i,!1),label:{fillColor:new Cesium.Color(188/255,238/255,104/255),text:"0米",font:"1.5vw arial"}})};