export default class Zmapfly{constructor(e,t={}){if(!(e instanceof Cesium.Viewer))throw"请传入Cesium.Viewer!";let{amount:n}=t;n=defaultVal(n,.005),this.czviewer=e;const o=e.camera,r={};this.addKey=e=>{r[e.key]=0},this.deleteKey=e=>{r.hasOwnProperty(e.key)&&delete r[e.key]},e.scene.screenSpaceCameraController.enableInputs=!1,document.addEventListener("keydown",this.addKey),document.addEventListener("keyup",this.deleteKey),this.removeCallback=e.clock.onTick.addEventListener(e=>{const t=o.positionCartographic.height*n;r.hasOwnProperty("a")&&o.moveLeft(t),r.hasOwnProperty("d")&&o.moveRight(t),r.hasOwnProperty("w")&&o.moveForward(t),r.hasOwnProperty("s")&&o.moveBackward(t),r.hasOwnProperty("c")&&o.moveUp(t),r.hasOwnProperty("z")&&o.moveDown(t)}),this.registerVieweMoveAction()}registerVieweMoveAction(){const e=this.czviewer;let t=!1;this.pointerdown=e=>{t=!0},this.pointerup=e=>{t=!1},this.mouseMove=n=>{if(!t)return;const o=-n.movementX,r=-n.movementY;e.camera.lookDown(Cesium.Math.toRadians(r/e.canvas.height*180*1)),e.camera.lookRight(Cesium.Math.toRadians(o/e.canvas.width*180*1)),e.camera.setView({orientation:{heading:e.camera.heading,pitch:e.camera.pitch,roll:0}})},e.canvas.addEventListener("pointermove",this.mouseMove),e.canvas.addEventListener("pointerdown",this.pointerdown),e.canvas.addEventListener("pointerup",this.pointerup)}closeFly(){const e=this.czviewer;this.removeCallback(),document.removeEventListener("keydown",this.addKey),document.removeEventListener("keyup",this.deleteKey),e.scene.screenSpaceCameraController.enableInputs=!0,e.canvas.removeEventListener("pointermove",this.mouseMove),e.canvas.removeEventListener("pointerdown",this.pointerdown),e.canvas.removeEventListener("pointerup",this.pointerup)}}function defaultVal(e,t){return null==e||null==e||NaN==e?t:e}